services:
  epicstory-postgres:
    image: postgres:14
    container_name: epicstory-postgres
    restart: always
    ports:
      - 5432:5432
    volumes:
      - epicstory-postgres:/var/lib/postgresql/data
    env_file:
      - .env
  epicstory-pgadmin:
    image: dpage/pgadmin4
    container_name: epicstory-pgadmin
    restart: always
    ports:
      - 3300:3300
    volumes:
      - epicstory-pgadmin:/var/lib/pgadmin
    env_file:
      - .env
  epicstory-peerjs:
    image: peerjs/peerjs-server
    command: peerjs -p 3001
    restart: always
    ports:
      - 3001:3001
  epicstory-redis:
    image: redis:7
    restart: always
    ports:
      - 6379:6379
  epicstory-traefik:
    image: traefik:2.10
    command:
      - --api.insecure
      - --providers.docker
      - --providers.docker.exposedbydefault=false
    ports:
      - 3000:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  epicstory-api:
    build:
      args:
        - NODE_IMAGE_VERSION=${NODE_IMAGE_VERSION}
      context: .
    image: epicstory-api
    volumes:
      - .:/usr/app
    env_file:
      - .env
    environment:
      - DATABASE_HOST=epicstory-postgres
    labels:
      - traefik.enable=true
      - traefik.http.routers.epicstory.rule=PathPrefix(`/`)
      - traefik.http.services.epicstory.loadBalancer.server.port=${APP_PORT}
      - traefik.http.services.epicstory.loadBalancer.sticky.cookie=true
      - traefik.http.services.epicstory.loadBalancer.sticky.cookie.name=server_id
      - traefik.http.services.epicstory.loadBalancer.sticky.cookie.httpOnly=true

volumes:
  epicstory-postgres:
    name: epicstory-postgres
  epicstory-pgadmin:
    name: epicstory-pgadmin
