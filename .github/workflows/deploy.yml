name: Deploy
on:
  workflow_dispatch:
    inputs:
      deployment:
        type: choice
        required: true
        options:
          - app
          - api
          - load-balancer
          - network
      version:
        required: true
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Chekout repository
        uses: actions/checkout@v4
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
      - name: Init terraform backend
        run: |
          cd deploy/${{ inputs.deployment }}
          terraform init
      - name: Deploy terraform plan (${{ inputs.deployment }})
        if: inputs.deployment == 'network' || inputs.deployment == 'load-balancer'
        run: |
          cd deploy/${{ inputs.deployment }}
          terraform apply --auto-approve
      - name: Deploy terraform plan (${{ inputs.deployment }}:${{ inputs.version }})
        if: inputs.deployment == 'api'
        env:
          SERVICE_NAME: epicstory-${{ inputs.deployment }}
          SERVICE_VERSION: ${{ inputs.version }}
          LB_NAME_TAG: epicstory-main-lb
          API_PORT: ${{ secrets.API_PORT }}
          CORS_ORIGINS: ${{ secrets.CORS_ORIGINS }}
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_REGISTRY: ${{secrets.AWS_REGISTRY}}
          AWS_REGION: ${{secrets.AWS_REGION}}
          AWS_BUCKET: ${{secrets.AWS_BUCKET}}
          GOOGLE_CLIENT_ID: ${{secrets.GOOGLE_CLIENT_ID}}
          GOOGLE_CLIENT_SECRET: ${{secrets.GOOGLE_CLIENT_SECRET}}
          GOOGLE_CALLBACK_URI: ${{secrets.GOOGLE_CALLBACK_URI}}
          GOOGLE_APP_REDIRECT_URL: ${{secrets.GOOGLE_APP_REDIRECT_URL}}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME}}
          DATABASE_USER: ${{ secrets.DATABASE_USER}}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD}}
          DATABASE_HOST: ${{ secrets.DATABASE_HOST}}
          DATABASE_MIGRATION_HOST: ${{ secrets.DATABASE_MIGRATION_HOST}}
          DATABASE_PORT: ${{ secrets.DATABASE_PORT}}
          COOKIE_SECRET: ${{ secrets.COOKIE_SECRET}}
          TRUST_PROXY: ${{ secrets.TRUST_PROXY}}
          REDIS_URL: ${{ secrets.REDIS_URL}}
          JWT_SECRET: ${{ secrets.JWT_SECRET}}
          JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN}}
          PASSWORD_ROUNDS: ${{ secrets.PASSWORD_ROUNDS}}
          DEFAULT_SENDER_EMAIL_ADDRESS: ${{ secrets.DEFAULT_SENDER_EMAIL_ADDRESS}}
          EMAIL_SMTP_URL: ${{ secrets.EMAIL_SMTP_URL}}
          EMAIL_SMTP_USER: ${{ secrets.EMAIL_SMTP_USER}}
          EMAIL_SMTP_PASSWORD: ${{ secrets.EMAIL_SMTP_PASSWORD}}
        run: |
          cd deploy/${{ inputs.deployment }}
          terraform apply --auto-approve
      - name: Deploy terraform plan (${{ inputs.deployment }}:${{ inputs.version }})
        if: inputs.deployment == 'app'
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_REGISTRY: ${{secrets.AWS_REGISTRY}}
          AWS_REGION: ${{secrets.AWS_REGION}}
          SERVICE_NAME: epicstory-${{ inputs.deployment }}
          SERVICE_VERSION: ${{ inputs.version }}
          LB_NAME_TAG: epicstory-main-lb
        run: |
          cd deploy/${{ inputs.deployment }}
          terraform apply --auto-approve
